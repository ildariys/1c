

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Печать(ТабДок, Ссылка) Экспорт

	Макет = Документы.Заказы.ПолучитьМакет("ПредварительныйЧек");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заказы.Дата КАК Дата,
	|	Заказы.ДатаЗакрытияЗаказа КАК ДатаЗакрытияЗаказа,
	|	Заказы.ЗаказЗакрыт КАК ЗаказЗакрыт,
	|	Заказы.Итого КАК Итого,
	|	Заказы.Номер КАК Номер,
	|	Заказы.НомерСтола КАК НомерСтола,
	|	Заказы.Официант КАК Официант,
	|	Заказы.Ресторан КАК Ресторан,
	|	Заказы.Блюда.(
	|		НомерСтроки КАК НомерСтроки,
	|		Блюдо КАК Блюдо,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма
	|	) КАК Блюда
	|ИЗ
	|	Документ.Заказы КАК Заказы
	|ГДЕ
	|	Заказы.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьБлюдаШапка = Макет.ПолучитьОбласть("БлюдаШапка");
	ОбластьБлюда = Макет.ПолучитьОбласть("Блюда");
	ОбластьСертификатыШапка = Макет.ПолучитьОбласть("СертификатыШапка");
	ОбластьСертификаты = Макет.ПолучитьОбласть("Сертификаты");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;

	
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Заголовок = "Чек, заказ закрыт";
		Если Выборка.ДатаЗакрытияЗаказа = '00010101' Тогда 
			Заголовок = "Предварительный чек, заказ Открыт"; 
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Заголовок = Заголовок;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьБлюдаШапка);
		ВыборкаБлюда = Выборка.Блюда.Выбрать();
		Пока ВыборкаБлюда.Следующий() Цикл
			ОбластьБлюда.Параметры.Заполнить(ВыборкаБлюда);
			ТабДок.Вывести(ОбластьБлюда, ВыборкаБлюда.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Функция СозданиеДокументаЗаказ (Параметры) Экспорт
	
	НовыйЗаказ 						= Документы.Заказы.СоздатьДокумент();

	НовыйЗаказ.Дата 				= ТекущаяДата();
	//НовыйЗаказ.ДатаЗакрытияЗаказа 	= Параметры.ДатаЗакрытияЗаказа;
	НовыйЗаказ.ЗаказЗакрыт 			= Ложь;
	НовыйЗаказ.Итого				= 0;
	//НовыйЗаказ.Клиент				= Параметры.Клиент;
	НовыйЗаказ.НомерСтола			= Параметры.НомерСтола;
	//НовыйЗаказ.ОплатаСертификатом	= Параметры.ОплатаСертификатом;
	НовыйЗаказ.Официант				= Параметры.Официант;
	НовыйЗаказ.Резерв				= Параметры.Резерв;
	НовыйЗаказ.Ресторан				= ПараметрыСеанса.ТекущийРесторан;
	//НовыйЗаказ.СертификатОплаты		= Параметры.СертификатОплаты;
	//НовыйЗаказ.СкидочнаяКарта		= Параметры.СкидочнаяКарта;
	НовыйЗаказ.ДатаРезерва			= Параметры.ДатаРезерва;
	
	
	
	//ТЧДокРезервБлюта = НовыйЗаказ.Блюда;
	//Для Каждого СтрТабЧасть Из Параметры.Блюда Цикл
	//	НоваяСтрокаПриемник 			= ТЧДокРезервБлюта.Добавить();
	//	НоваяСтрокаПриемник.Блюдо 		= СтрТабЧасть.Блюдо;
	//	НоваяСтрокаПриемник.Количество 	= СтрТабЧасть.Количество;
	//	НоваяСтрокаПриемник.Статус 		= СтрТабЧасть.Статус;
	//	НоваяСтрокаПриемник.Сумма 		= СтрТабЧасть.Сумма;
	//	НоваяСтрокаПриемник.Цена 		= СтрТабЧасть.Цена;
	//	НоваяСтрокаПриемник.Повар 		= стрТабЧасть.Повар;
	//	НоваяСтрокаПриемник.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	//	
	//	//ЗаполнитьЗначенияСвойств(НоваяСтрокаПриемник, СтрТабЧасть);
	//КонецЦикла;
	//
	
	НовыйЗаказ.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат НовыйЗаказ.Ссылка;
	
КонецФункции

Процедура РедактированиеДокумента (СсылкаЗаказ, Параметры, РежимЗаписи) Экспорт

	ДокРезерв 						= СсылкаЗаказ.ПолучитьОбъект();
	
	//////////////////////ЭТО УДАЛИТЬ
	Если Ложь Тогда
	
		ДокРезерв = Документы.Заказы.СоздатьДокумент();
	
	КонецЕсли;
	///////////////////////////////////////////////////////
	
	//ДокРезерв.Дата 					= Параметры.Дата;
	ДокРезерв.ДатаЗакрытияЗаказа 	= Параметры.ДатаЗакрытияЗаказа;
	ДокРезерв.ЗаказЗакрыт 			= Параметры.ЗаказЗакрыт;
	ДокРезерв.Итого					= Параметры.Итого;
	ДокРезерв.Клиент				= Параметры.Клиент;
	ДокРезерв.НомерСтола			= Параметры.НомерСтола;
	ДокРезерв.ОплатаСертификатом	= Параметры.ОплатаСертификатом;
	//ДокРезерв.Официант				= Параметры.Официант;
	ДокРезерв.Резерв				= Параметры.Резерв;
	ДокРезерв.Ресторан				= Параметры.Ресторан;
	ДокРезерв.СертификатОплаты		= Параметры.СертификатОплаты;
	ДокРезерв.СкидочнаяКарта		= Параметры.СкидочнаяКарта;
	
	ТЧДокРезервБлюда = ДокРезерв.Блюда;
	//ТЧДокРезервБлюта.Очистить();
	
	СтутусБлюдаПереданНаКухню = Перечисления.СтатусыБлюда.ПереданНаКухню;
	СтатусБлюдаЗаказПринят = Перечисления.СтатусыБлюда.ЗаказПринят;
	//Для Каждого СтрТабЧасть Из Параметры.Блюда Цикл
	
	Для каждого ТекущаяСТрокаТабличнойЧастиАРМа Из Параметры.Блюда Цикл
		
		Если ТекущаяСТрокаТабличнойЧастиАРМа.Статус = СтатусБлюдаЗаказПринят Тогда
			
			НоваяСтрокаПриемник 					= ТЧДокРезервБлюда.Добавить();
			НоваяСтрокаПриемник.Блюдо 				= ТекущаяСТрокаТабличнойЧастиАРМа.Блюдо;
			НоваяСтрокаПриемник.Количество 			= ТекущаяСТрокаТабличнойЧастиАРМа.Количество;
			НоваяСтрокаПриемник.Статус 				= СтутусБлюдаПереданНаКухню;
			НоваяСтрокаПриемник.Сумма 				= ТекущаяСТрокаТабличнойЧастиАРМа.Сумма;
			НоваяСтрокаПриемник.Цена 				= ТекущаяСТрокаТабличнойЧастиАРМа.Цена;
			НоваяСтрокаПриемник.ИдентификаторСтроки = ТекущаяСТрокаТабличнойЧастиАРМа.ИдентификаторСтроки;
			НоваяСтрокаПриемник.ПричинаОтказа 		= ТекущаяСТрокаТабличнойЧастиАРМа.ПричинаОтказа;
			
		КонецЕсли;
		
		Для каждого ТекущаяСтрока Из ТЧДокРезервБлюда Цикл
		
			Если ТекущаяСТрокаТабличнойЧастиАРМа.ПричинаОтказа <> ТекущаяСтрока.ПричинаОтказа
			И ТекущаяСТрокаТабличнойЧастиАРМа.ИдентификаторСтроки = ТекущаяСтрока.ИдентификаторСтроки Тогда
			
				ТекущаяСтрока.ПричинаОтказа = ТекущаяСТрокаТабличнойЧастиАРМа.ПричинаОтказа;
			
			КонецЕсли;
		
		КонецЦикла;
		
		
		
		
	КонецЦикла;		
		
		//ЗаполнитьЗначенияСвойств(НоваяСтрокаПриемник, СтрТабЧасть);
	//КонецЦикла;
	
	// регистр Сертификаты расход
	ДокРезерв.Записать(РежимЗаписи);

КонецПроцедуры

Процедура РедактированиеДокументаПоваром(СтруктураЗаказа) Экспорт

	ДокРезерв = СтруктураЗаказа.Ссылка.ПолучитьОбъект();

	СтатусГотово = Перечисления.СтатусыБлюда.Готово;
	ВсеГотово = Истина;

	Для Каждого ТекущаяСтрока Из ДокРезерв.Блюда Цикл
	    //Поиск строки и изменение данных в ней
		Если ТекущаяСтрока.ИдентификаторСтроки = СтруктураЗаказа.ИдентификаторСтроки Тогда

			ТекущаяСтрока.Повар = СтруктураЗаказа.Повар;
			ТекущаяСтрока.Статус = СтруктураЗаказа.Статус;

		КонецЕсли;

		Если ТекущаяСтрока.Статус <> СтатусГотово Тогда
			ВсеГотово = Ложь;
		КонецЕсли;
	КонецЦикла;

	Если ВсеГотово Тогда
		ДокРезерв.ГотовДляДоставки = Истина;
		ДокРезерв.СтатусЗаказа = Перечисления.СтатусЗаказа.ГотовДляДоставки;
	КонецЕсли;
	ДокРезерв.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры

Процедура ЗаписьНазначенияКурьера(Заказ, Курьер, Статус) Экспорт
	
	ДокРезерв = Заказ.Ссылка.ПолучитьОбъект();
	ДокРезерв.Курьер = Курьер;
	ДокРезерв.СтатусЗаказа = Статус;
	ДокРезерв.ВремяВыдачиЗаказаКурьеру = ТекущаяДата();
	
	ДокРезерв.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ЗакрытиеНеДоставленногоЗаказа(Ссылка) Экспорт

	ДокРезерв = Ссылка.ПолучитьОбъект();
	ДокРезерв.ЗаказЗакрыт = Истина;
	ДокРезерв.ДатаЗАкрытияЗаказа = ТекущаяДата();
	ДокРезерв.СтатусЗаказа = Перечисления.СтатусЗаказа.НеДоставлен;
	ДокРезерв.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры


#КонецОбласти
