#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ЗаказЗакрыт Тогда
		Элементы.ВсеЭлементы.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СкидочнаяКартаПриИзменении(Элемент)
	
	ПрименениеСкидки();
	РасчетИтого();
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБлюда

&НаКлиенте
Процедура БлюдаБлюдоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Блюда.ТекущиеДанные;
	СТрокаТч.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	СтрокаТЧ.Количество = 1;
	
	Если СтрокаТЧ.Блюдо = ПредопределенноеЗначение("Справочник.Блюда.Сертификат") Тогда
		ПоказатьОповещениеОВводеЦеныСертификата();
	КонецЕсли;
		
	СтрокаТЧ.Цена = ОбщийСервер.ЦенаБлюда(ТекущаяДата(), СтрокаТЧ.Блюдо);
	ОбновитьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьЗаказ(Команда)
	ТабличнаяЧасть = Объект.Блюда;
	Для каждого ТекущаяСтрока Из ТабличнаяЧасть Цикл
		 Если Не ЗначениеЗаполнено(ТекущаяСтрока.Блюдо) Или
			Не ЗначениеЗаполнено(ТекущаяСтрока.Количество) ИЛИ
			Не ЗначениеЗаполнено(ТекущаяСтрока.Цена) Тогда
		
			Сообщить("Заполните все значения блюд!");
			Возврат;
		КонецЕсли;
	КонецЦикла;

	Объект.ЗаказЗакрыт = Истина; 
	Объект.ДатаЗакрытияЗаказа = ТекущаяДата();
	
	РасчетИтого();
	ТекущаяСуммаЗаказов = ДанныеОКлиентеСервер.СуммаЗаказовКлиента(Объект.Клиент);

	Если ТекущаяСуммаЗаказов > ОбщегоНазначения.СуммаВыдачиБонуснойКарты() Тогда
		ДиалогСоздатьНовуюКарту();
	КонецЕсли;
	
	МассивСертификатов = Новый Массив;
	Для Каждого СтрТабЧасть Из Объект.Блюда Цикл
		Если СтрТабЧасть.Блюдо = ПредопределенноеЗначение("Справочник.Блюда.Сертификат") Тогда
			Для Счетчик = 1 По СтрТабЧасть.Количество Цикл
				МассивСертификатов.Добавить(СоздатьНовыйСертификат(СтрТабЧасть.Сумма));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОбъекта = Объект;
	РедактированиеДокумента(Объект.Ссылка, ПараметрыОбъекта, РежимЗаписиДокумента.Проведение);

	ТабДок = Новый ТабличныйДокумент;
	Если МассивСертификатов.Количество() <> 0 Тогда
	
		//Печать Сертификатов
		ПараметрКоманды = МассивСертификатов;
		ПечатьСертификата(ТабДок, ПараметрКоманды);
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Защита = Истина;
		ТабДок.ТолькоПросмотр = Истина;
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.Показать();
	
	КонецЕсли;
	
	//Печать Чека
	ПараметрКоманды = Объект.Ссылка;
	ПечатьЧека(ТабДок, ПараметрКоманды);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	
	Если ЗначениеЗаполнено(Объект.СертификатОплаты) Тогда
		
		ТекущийОбъект = Объект;
		ЗаписьИспользованногоСертификата(ТекущийОбъект);
		
	КонецЕсли;
	Элементы.ВсеЭлементы.Доступность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоказатьОповещениеОВводеЦеныСертификата()
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЧисла", ЭтотОбъект);
	ПоказатьВводЧисла( Оповещение,,"Введите номинал сертификата ",5);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные()

	СтрокаТЧ = Элементы.Блюда.ТекущиеДанные;
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(СтрокаТЧ);
	
КонецПроцедуры 

&НаКлиенте
Процедура РасчетИтого()
	
	ДанныеСертификата = ОбщегоНазначения.ПолучитьДанныеСертификата(Объект.СертификатОплаты);
	Если Не ДанныеСертификата = Неопределено Тогда
		СуммаСертификата = ДанныеСертификата.СуммаСертификата;
	Иначе
		СуммаСертификата = Неопределено;
	КонецЕсли;
	
	
	Если СуммаСертификата = Неопределено Тогда
		СуммаСертификата = 0;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РазмерСкидки) Тогда
		РазмерСкидки = 1;
	КонецЕсли;
	
	СуммаБлюд = 0;
	СуммаСертификатов = 0;
	
	Для Каждого СтрТабЧасть Из Объект.Блюда Цикл
		Если СтрТабЧасть.Блюдо = ПредопределенноеЗначение("Справочник.Блюда.Сертификат") Тогда
			СуммаСертификатов = СуммаСертификатов + СтрТабЧасть.Сумма;
		Иначе
			Если ЗначениеЗаполнено(СтрТабЧасть.ПричинаОтказа)Тогда
				СтрТабЧасть.Цена = 0;
				Продолжить;
			КонецЕсли;			
			СуммаБлюд = СуммаБлюд + СтрТабЧасть.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ИтогБезПокупаемыхСертификатов = СуммаБлюд * РазмерСкидки - СуммаСертификата;
	
	Если ИтогБезПокупаемыхСертификатов < 0 Тогда
		 ИтогБезПокупаемыхСертификатов = 0;
	КонецЕсли;
	
	Объект.Итого = ИтогБезПокупаемыхСертификатов + СуммаСертификатов; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименениеСкидки()
	
	СтруктураЗаказыКлиента = КоличествоЗаказовклиентаИРазмерСкидки(Объект.Клиент);
	
	Если СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.Скидка") Тогда
		РазмерСкидки = 1 - СтруктураЗаказыКлиента.Размер / 100;
	ИначеЕсли СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.КаждыйНБесплатно")
		Или (СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.КаждыйНСреднийБесплатно")
		И СтруктураЗаказыКлиента.Итого > Объект.Блюда.Итог("Сумма")) Тогда
		
		Если СтруктураЗаказыКлиента.Размер < СтруктураЗаказыКлиента.КоличествоСделанныхЗаказаов Тогда
			РазмерСкидки = 0;
			Сообщить("Бесплатный заказ");
		КонецЕсли;
		
		Сообщить("Скидки нет");
		РазмерСкидки = 1;
	Иначе
		РазмерСкидки = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьНовыйСертификат(Сумма)	
	
	Возврат Справочники.Сертификаты.СсылкаНаНовыйСертификат(Сумма);
	
КонецФункции

&НаКлиенте
Процедура ДиалогСоздатьНовуюКарту()
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект);
	ПоказатьВопрос(Оповещение,"Выдать новую карту клиенту?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Новая скидочная карта");

КонецПроцедуры

&НаСервереБезКонтекста
Процедура РедактированиеДокумента(СсылкаЗаказ, ОбъектРедактирования, РежимЗаписи)

		Документы.Заказы.РедактированиеДокумента(СсылкаЗаказ, ОбъектРедактирования, РежимЗаписи);

КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПечатьСертификата(ТабДок, ПараметрКоманды)
	
	Справочники.Сертификаты.Печать(ТабДок, ПараметрКоманды);

КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПечатьЧека(ТабДок, ПараметрКоманды)
	
	Документы.Заказы.Печать(ТабДок,ПараметрКоманды);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписьИспользованногоСертификата(ТекущийОбъект)

		РегистрыСведений.Сертификаты.ЗарегистрироватьСертификат(ТекущийОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоЗаказовклиентаИРазмерСкидки(Ссылка)
	Возврат ОбщегоНазначения.КоличествоЗаказовклиентаИРазмерСкидки(Ссылка);
КонецФункции

&НаКлиенте
Процедура ПослеВводаЧисла(Результат, Параметры) Экспорт
	
	Если Не Результат = Неопределено Тогда
		СтрокаТЧ 		= Элементы.Блюда.ТекущиеДанные;
		СтрокаТЧ.Цена 	= Результат;		
		ОбновитьДанные();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Клиент", Объект.Клиент);
		ОткрытьФорму("Справочник.СкидочныеКарты.Форма.ФормаЭлемента", ПараметрыФормы);		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
