//#Область ОбработчикиСобытий

//&НаКлиенте
//Процедура ПриОткрытии(Отказ)

//	Если Объект.Официант.Пустая() Тогда 
//		Объект.Официант = ПолучениеДанныхТекущегоСеансаСервер.ВернутьЗначениеПараметраСеансаТекущийПользователь();
//	КонецЕсли; 
//	Если Объект.Ресторан.Пустая() Тогда 
//		Объект.Ресторан = ПолучениеДанныхТекущегоСеансаСервер.ВернутьЗначениеПараметраСеансаТекущийРесторан();
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	Если Объект.Дата = '00010101' Тогда
//		Объект.Дата = ТекущаяДатаСеанса();
//	КонецЕсли;
//	
//КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//&НаКлиенте
//Процедура ЗапретРедактирования()
//	
//	Если ЗначениеЗаполнено(Объект.ДатаЗакрытияЗаказа) Тогда
//		Сообщить ("Заказ закрыт, редактирование недоступно"); 
//		Элементы.Блюда.Доступность = Ложь;
//		Элементы.НомерСтола.Доступность = Ложь;
//		Элементы.Официант.Доступность = Ложь;
//		Элементы.ЗакрытьЗаказ.Доступность = Ложь;
//		Элементы.СкидочнаяКарта.Доступность = Ложь;
//		Элементы.ПрименитьСкидку.Доступность = Ложь;
//	КонецЕсли;

//КонецПроцедуры


//&НаКлиенте
//Процедура БлюдаКоличествоПриИзменении(Элемент)
//	
//	ОбновитьДанные();
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура БлюдаБлюдаПриИзменении(Элемент)
//	
//	СтрокаТЧ = ЭтаФорма.Элементы.Блюда.ТекущиеДанные;
//	СтрокаТЧ.Количество = 1;
//	СтрокаТЧ.Цена = ОбщийСервер.ЦенаБлюда(ТекущаяДата(),СтрокаТЧ.Блюдо);
//	ОбновитьДанные();
//	
//КонецПроцедуры  

//&НаКлиенте
//Процедура ОбновитьДанные()

//	СтрокаТЧ = ЭтаФорма.Элементы.Блюда.ТекущиеДанные;
//	СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура БлюдаЦенаПриИзменении(Элемент)
//	ОбновитьДанные();
//КонецПроцедуры

//Функция ВернутьЗначениеСтола(Значение)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	Столы.Ссылка КАК Ссылка
//		|ИЗ
//		|	Справочник.Столы КАК Столы
//		|ГДЕ
//		|	Столы.Наименование = &Наименование";
//	
//	Запрос.УстановитьПараметр("Наименование", Значение);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	ВыборкаДетальныеЗаписи.Следующий();
//	Возврат ВыборкаДетальныеЗаписи.Ссылка;

//КонецФункции

//&НаКлиенте
//Процедура ПрименениеСкидки()
//		
/////////////////////////////////////////////////Скидка 10й бесплатно

//	РазмерСкидки = 1;
//	СтруктураЗаказыКлиента = КоличествоЗаказовклиента(Объект.Клиент);
//	
//	Если СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.Скидка") Тогда
//		Ссылка = Объект.Клиент;
//		РазмерСкидки = 1 - СтруктураЗаказыКлиента.Размер / 100;
//			
//	ИначеЕсли СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.КаждыйНБесплатно")
//		Или (СтруктураЗаказыКлиента.ТипКарты = ПредопределенноеЗначение("Справочник.ТипыКарт.КаждыйНСреднийБесплатно")
//		И СтруктураЗаказыКлиента.Итого > Объект.Блюда.Итог("Сумма")) Тогда
//		
//		Если СтруктураЗаказыКлиента.Размер < СтруктураЗаказыКлиента.КоличествоСделанныхЗаказаов Тогда
//			
//		//	ОчисткаРегистра(Объект.Клиент);
//			
//			РазмерСкидки = 0;
//			
//			Сообщить("Каждый Н бесплатно");
//		КонецЕсли;	
//	Иначе
//		////добавить условие
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаСервере
//Функция ЗначениеРеквизита() 
//	
//		СтруктураСкидочнойКарты = Новый Структура;
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ТипыКарт.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
//		|ИЗ
//		|	Справочник.ТипыКарт КАК ТипыКарт";
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		СтруктураСкидочнойКарты.Вставить("ВыборкаДетальныеЗаписи.ТипКартыИмяПредопределенныхДанных", ВыборкаДетальныеЗаписи.ТипКартыИмяПредопределенныхДанных);
//	КонецЦикла;
//	
//	Возврат СтруктураСкидочнойКарты;
//	
//КонецФункции

//&НаСервере
//Функция СуммаЗаказовКлиента(Ссылка)

//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	СуммаЗаказовКлиентыОбороты.СуммаЗаказаОборот КАК СуммаЗаказаОборот
//		|ИЗ
//		|	РегистрНакопления.СуммаЗаказовКлиенты.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК СуммаЗаказовКлиентыОбороты
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкидочныеКарты КАК СкидочныеКарты
//		|		ПО СуммаЗаказовКлиентыОбороты.Клиент.Ссылка = СкидочныеКарты.Клиент.Ссылка
//		|ГДЕ
//		|	СуммаЗаказовКлиентыОбороты.Клиент.Ссылка = &Ссылка
//		|	И СкидочныеКарты.Клиент ЕСТЬ NULL";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ТекущаяДата()));
//	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущаяДата()));
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Возврат ВыборкаДетальныеЗаписи.СуммаЗаказаОборот;
//	КонецЦикла;
//	
//	Возврат 0;


//КонецФункции


//#КонецОбласти

//#Область ОбработчикиКомандФормы

//&НаКлиенте
//Процедура ЗакрытьЗаказ(Команда)
//	
//	ТабличнаяЧасть = Объект.Блюда;
//	Для каждого ТекущаяСтрока Из ТабличнаяЧасть Цикл
//		 Если Не ЗначениеЗаполнено(ТекущаяСтрока.Блюдо) Или
//			Не ЗначениеЗаполнено(ТекущаяСтрока.Количество) ИЛИ
//			Не ЗначениеЗаполнено(ТекущаяСтрока.Цена) Тогда
//		
//			Сообщить("Заполните все значения блюд!");
//			Возврат;
//		КонецЕсли;
//	КонецЦикла;

//	Объект.ЗаказЗакрыт = Истина; 
//	Объект.ДатаЗакрытияЗаказа = ТекущаяДата();
//	
//	РасчетИтого();
//	ТекущаяСуммаЗаказов = СуммаЗаказовКлиента(Объект.Клиент);

//	Если ТекущаяСуммаЗаказов > СуммаВыдачиБонуснойКарты() Тогда
//		ДиалогСоздатьНовуюКарту();
//	КонецЕсли;
//	
//	МассивСертификатов = Новый Массив;
//	Для Каждого СтрТабЧасть Из Объект.Блюда Цикл
//		Если СтрТабЧасть.Блюдо = ПредопределенноеЗначение("Справочник.Блюда.Сертификат") Тогда
//			Для Счетчик = 1 По СтрТабЧасть.Количество Цикл
//				МассивСертификатов.Добавить(СоздатьНовыйСертификат(СтрТабЧасть.Сумма))
//			КонецЦикла;
//		КонецЕсли;
//	КонецЦикла;
//	
//	ПараметрыОбъекта = Объект;
//	РедактированиеДокумента(СсылкаЗаказ, ПараметрыОбъекта, РежимЗаписиДокумента.Проведение);

//	ТабДок = Новый ТабличныйДокумент;
//	Если МассивСертификатов.Количество() <> 0 Тогда
//	
//		//Печать Сертификатов
//		ПараметрКоманды = МассивСертификатов;
//		ПечатьСертификата(ТабДок, ПараметрКоманды);
//		ТабДок.ОтображатьСетку = Ложь;
//		ТабДок.Защита = Истина;
//		ТабДок.ТолькоПросмотр = Истина;
//		ТабДок.ОтображатьЗаголовки = Ложь;
//		ТабДок.Показать();
//	
//	КонецЕсли;
//	
//	//Печать Чека
//	ПараметрКоманды = СсылкаЗаказ;
//	ПечатьЧека(ТабДок, ПараметрКоманды);
//	ТабДок.ОтображатьСетку = Ложь;
//	ТабДок.Защита = Истина;
//	ТабДок.ТолькоПросмотр = Истина;
//	ТабДок.ОтображатьЗаголовки = Ложь;
//	ТабДок.Показать();
//	
//	Если ЗначениеЗаполнено(Объект.СертификатОплаты) Тогда
//		
//		ТекущийОбъект = Объект;
//		ЗаписьИспользованногоСертификата(ТекущийОбъект);
//		
//	КонецЕсли;
//	
//	СертификатОплаты = "";
//	Объект.Блюда.Очистить();
//	Элементы["Стол" + Объект.НомерСтола].Заголовок = Строка(Объект.НомерСтола);
//	Элементы["Стол" + Объект.НомерСтола].ЦветФона = Новый Цвет(0,255,0);
//	ОчиститьДанные();
//	ИзменениеДоступностиКнопокФормы();

//КонецПроцедуры

//&НаКлиенте
//Процедура ДиалогСоздатьНовуюКарту()
//	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект);
//	ПоказатьВопрос(Оповещение,"Выдать новую карту клиенту?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Новая скидочная карта");

//КонецПроцедуры 
//&НаКлиенте
//Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
// 
//	Если Результат = КодВозвратаДиалога.Да Тогда

//		//Отбор = Новый Структура;
//		//Отбор.Вставить("Клиент", Объект.Клиент);
//			
//		ПараметрыФормы = Новый Структура;
//		//ПараметрыФормы.Вставить("Отбор", Отбор); 
//		ПараметрыФормы.Вставить("Клиент", Объект.Клиент);
//		
//		ОткрытьФорму("Справочник.СкидочныеКарты.Форма.ФормаЭлемента", ПараметрыФормы);
//	КонецЕсли;	
// 
//КонецПроцедуры



//&НаСервереБезКонтекста
//Функция ПолучитьТипИРазмерСкидки(Ссылка)
//	
//	СтруктураСкидочнойКарты = Новый Структура;
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	СкидочныеКарты.ТипКарты.Ссылка КАК ТипКартыСсылка,
//		|	СкидочныеКарты.Размер КАК Размер,
//		|	СкидочныеКарты.ТипКарты.ИмяПредопределенныхДанных КАК ТипКартыИмяПредопределенныхДанных
//		|ИЗ
//		|	Справочник.СкидочныеКарты КАК СкидочныеКарты
//		|ГДЕ
//		|	СкидочныеКарты.Клиент.Ссылка = &Ссылка";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		СтруктураСкидочнойКарты.Вставить("ТипСкидки", ВыборкаДетальныеЗаписи.ТипКартыИмяПредопределенныхДанных);
//		СтруктураСкидочнойКарты.Вставить("РазмерСкидки", ВыборкаДетальныеЗаписи.Размер);
//	КонецЦикла;
//	
//	Возврат СтруктураСкидочнойКарты;

//	
//КонецФункции

//&НаКлиенте
//Процедура ПрименитьСкидку(Команда)
//	Объект.Итого = Объект.Блюда.Итог("Сумма") * РазмерСкидки;
//КонецПроцедуры

//&НаКлиенте
//Процедура ГостьПриИзменении(Элемент)
//	
//	ПрименениеСкидки();
//	Элементы.ПрименитьСкидку.Доступность = Истина;
//	//УстановитьСуммуЗаказаКлиента();
//	
//КонецПроцедуры 

//#КонецОбласти

//Процедура ОчисткаРегистра (Ссылка)
//	
//	
//	
//КонецПроцедуры

//&НаСервереБезКонтекста
//Функция КоличествоЗаказовклиента(Ссылка)

//СтруктураЗаказыКлиента = Новый Структура;
//СтруктураЗаказыКлиента.Вставить("КоличествоСделанныхЗаказаов", 0);
//СтруктураЗаказыКлиента.Вставить("Итого", 0);
//СтруктураЗаказыКлиента.Вставить("ТипКарты", Неопределено);
//СтруктураЗаказыКлиента.Вставить("Размер", Неопределено);

//	///////Проверка на NULL	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	КоличествоЗаказовАкцияОстатки.КоличествоОстаток КАК КоличествоСделанныхЗаказаов,
//		|	КоличествоЗаказовАкцияОстатки.ИтогоОстаток / КоличествоЗаказовАкцияОстатки.КоличествоОстаток КАК Итого
//		|ИЗ
//		|	РегистрНакопления.КоличествоЗаказовАкция.Остатки КАК КоличествоЗаказовАкцияОстатки
//		|ГДЕ
//		|	КоличествоЗаказовАкцияОстатки.Клиент.Ссылка = &Ссылка
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	СкидочныеКарты.Размер КАК Размер,
//		|	ЕСТЬNULL(ТипыКарт.Ссылка, НЕОПРЕДЕЛЕНО) КАК ТипКартыСсылка
//		|ИЗ
//		|	Справочник.СкидочныеКарты КАК СкидочныеКарты
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыКарт КАК ТипыКарт
//		|		ПО СкидочныеКарты.ТипКарты = ТипыКарт.Ссылка
//		|ГДЕ
//		|	СкидочныеКарты.Клиент.Ссылка = &Ссылка";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	
//	РезультатЗапроса = Запрос.ВыполнитьПакет();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса[0].Выбрать();
//	
//	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
//		СтруктураЗаказыКлиента.Вставить("КоличествоСделанныхЗаказаов", ВыборкаДетальныеЗаписи.КоличествоСделанныхЗаказаов);
//		СтруктураЗаказыКлиента.Вставить("Итого", ВыборкаДетальныеЗаписи.Итого);
//	КонецЕсли;
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
//	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
//		СтруктураЗаказыКлиента.Вставить("ТипКарты", ВыборкаДетальныеЗаписи.ТипКартыСсылка);
//		СтруктураЗаказыКлиента.Вставить("Размер", ВыборкаДетальныеЗаписи.Размер);
//	КонецЕсли;
//	
//	Возврат СтруктураЗаказыКлиента;


//	
//КонецФункции 


//&НаКлиенте
//Процедура ДополнительныеУслугиПриИзменении(Элемент)
//	СуммаСертификатов = Объект.ДополнительныеУслуги.Итог("Сумма");
//КонецПроцедуры

//&НаСервереБезКонтекста
//Процедура УстановитьСуммуСертификата(Ссылка)
//		
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	Сертификаты.Сумма КАК Сумма
//		|ИЗ
//		|	Справочник.Сертификаты КАК Сертификаты
//		|ГДЕ
//		|	Сертификаты.Ссылка = &Ссылка";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		СуммаСертификата = ВыборкаДетальныеЗаписи.Сумма;
//	КонецЦикла;
//	
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура СертификатПриИзменении(Элемент)
//	УстановитьСуммуСертификата(Объект.СертификатОплаты);
//КонецПроцедуры

//////////////////////Печать СЕртификатов

//&НаСервере
//Процедура Печать(ТабДок, ПараметрКоманды)
//	Справочники.Сертификаты.Печать(ТабДок, ПараметрКоманды);
//КонецПроцедуры

////////////////////Печать Чека
//&НаСервере
//Процедура ПечатьЧека(ТабДок, ПараметрКоманды)
//	Документы.Заказы.Печать(ТабДок,ПараметрКоманды);

//КонецПроцедуры

//// ////////////////////////////////////
//Функция УстановитьЦенуСертификата(Ссылка)
//		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
//	// Данный фрагмент построен конструктором.
//	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	Сертификаты.Сумма КАК Сумма
//		|ИЗ
//		|	Справочник.Сертификаты КАК Сертификаты
//		|ГДЕ
//		|	Сертификаты.Ссылка = &Ссылка";
//	
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Возврат ВыборкаДетальныеЗаписи.Сумма;
//	КонецЦикла;
//	
//	Возврат 0;

//КонецФункции

//&НаСервереБезКонтекста
//Функция ПрименитьСертификатНаСервере(НомерСертификата)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	Сертификаты.СуммаСертификата.Сумма КАК СертификатСумма
//		|ИЗ
//		|	РегистрСведений.Сертификаты КАК Сертификаты";
//	
//	Запрос.УстановитьПараметр("Код", НомерСертификата);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Возврат ВыборкаДетальныеЗаписи.СертификатСумма;
//	КонецЦикла;
//	Возврат Неопределено;
//	

//КонецФункции

//&НаКлиенте
//Процедура СертификатОплатыПриИзменении(Элемент)
//	НомерСертификата = Объект.СертификатОплаты;
//	РезультатЗапроса = ПрименитьСертификатНаСервере(НомерСертификата);

//	Если РезультатЗапроса = Неопределено Тогда
//		Сообщить("Сертификат не найден");
//	Иначе
//		СуммаСертификата = РезультатЗапроса;
//	КонецЕсли;
//КонецПроцедуры

//&НаКлиенте
//Процедура СертификатыСертификатАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание,
//	СтандартнаяОбработка)
//	СтандартнаяОбработка = Ложь;
//	Возврат;
//КонецПроцедуры

//&НаКлиенте
//Процедура СертификатОплатыПриИзменении1(Элемент)

//	Объект.СертификатОплаты = ПрименитьСертификатНаСервере(СертификатОплаты);
//	УстановитьСуммуСертификата(Объект.СертификатОплаты);
//КонецПроцедуры