
&НаСервереБезКонтекста
Процедура СоставИнгридиентыПриИзмененииНаСервере()
		
КонецПроцедуры

&НаКлиенте
Процедура СоставИнгридиентыПриИзменении(Элемент)
	СоставИнгридиентыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРецепт()
	
	Объект.Ингридиенты.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Блюдо", Объект.Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.Ингридиент КАК Ингридиент,
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.Количество КАК Количество,
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.ЕдИзм КАК ЕдИзм
		|ИЗ
		|	РегистрСведений.ИсторияИзмененийРепцетурыБлюд.СрезПоследних(, Блюдо = &Блюдо) КАК ИсторияИзмененийРепцетурыБлюдСрезПоследних";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр = Объект.Ингридиенты.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
	КонецЦикла;


КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьРецепт();
КонецПроцедуры


&НаКлиенте
Процедура РасчитатьСебестоимость(Команда)
	
	МассивИнгридиентов = Новый Массив;
	МассивЦен = Новый Массив;
	
	Для каждого ТекСтрока Из Объект.Ингридиенты Цикл
	
		МассивИнгридиентов.Добавить(ТекСтрока.Ингридиент);
	
	КонецЦикла;
	
	РасчитатьСебестоимостьНаСервере(МассивИнгридиентов);

КонецПроцедуры


&НаСервере
Процедура РасчитатьСебестоимостьНаСервере(МассивИнгридиентов)
	
	Объект.Ингридиенты.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныЗакупкиНоменклатурСрезПоследних.Цена КАК Цена,
		|	ЦеныЗакупкиНоменклатурСрезПоследних.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ЦеныСрезПоследних
		|ИЗ
		|	РегистрСведений.ЦеныЗакупкиНоменклатур.СрезПоследних(
		|			,
		|			Ресторан = &Ресторан) КАК ЦеныЗакупкиНоменклатурСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.Ингридиент КАК Ингридиент,
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.Количество КАК Количество,
		|	ИсторияИзмененийРепцетурыБлюдСрезПоследних.ЕдИзм КАК ЕдИзм
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	РегистрСведений.ИсторияИзмененийРепцетурыБлюд.СрезПоследних(, Блюдо = &Блюдо) КАК ИсторияИзмененийРепцетурыБлюдСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Ингридиент КАК Ингридиент,
		|	ВТ_Номенклатура.Количество КАК Количество,
		|	ВТ_Номенклатура.ЕдИзм КАК ЕдИзм,
		|	ВТ_ЦеныСрезПоследних.Цена / ВТ_Номенклатура.Количество КАК Себестоимость
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныСрезПоследних КАК ВТ_ЦеныСрезПоследних
		|		ПО ВТ_Номенклатура.Ингридиент = ВТ_ЦеныСрезПоследних.Номенклатура";
	
	Запрос.УстановитьПараметр("Ресторан", ПараметрыСеанса.ТекущийРесторан);
	Запрос.УстановитьПараметр("Номенклатура", МассивИнгридиентов);
	Запрос.УстановитьПараметр("Блюдо", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр = Объект.Ингридиенты.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостав(Команда)
	
	ЗаполнитьРецепт();
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораКартинки(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	АдресКартинки = ОписаниеПомещенногоФайла.Адрес;

КонецПроцедуры // ПослеВыбораКартинки()

&НаКлиенте
Процедура ОчиститьКартинку(Команда)
	
	АдресКартинки = "";
	
КонецПроцедуры

&НаСервере
Процедура приЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда
		
		ДанныеФайла = ПолучитьИзВременногоХранилища(АдресКартинки);
		ТекущийОбъект.Картинка = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных(9));
		
	ИначеЕсли ПустаяСтрока(АдресКартинки) = Истина Тогда
		
		ТекущийОбъект.Картинка = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
		АдресКартинки = ПолучитьНавигационнуюСсылку(ТекущийОбъект, "Картинка");

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ВызовДобавитьИзображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ВызовДобавитьИзображение()
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = "Выберите изображение";
	ПараметрыДиалога.Фильтр = "Изображение | *.jpg; *.png;*.bmp;*.jpeg";
	
	ЧтоДелатьПослеВыбораФайла = Новый ОписаниеОповещения("ПослеВыбораКартинки", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(ЧтоДелатьПослеВыбораФайла,,,,ПараметрыДиалога, УникальныйИдентификатор);

КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
		Если ЭтоАдресВременногоХранилища(АдресКартинки) Тогда
		ДанныеФайла = ПолучитьИзВременногоХранилища(АдресКартинки);
		ТекущийОбъект.Картинка = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных(9));
	ИначеЕсли ПустаяСтрока(АдресКартинки) = Истина Тогда
		ТекущийОбъект.Картинка = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ПовернутьКартинку(Команда)
	
	ПовернутьФотоНаСервереПоЧасовой();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресКартинки = ПоместитьВоВременноеХранилище(Объект.Ссылка.Картинка.Получить(), УникальныйИдентификатор);
	Если Не РольДоступна("Администраторы") Тогда
		
		Элементы.Группа8.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПовернутьФотоНаСервереПоЧасовой()
	
	Ссылка = ПолучитьИзВременногоХранилища(АдресКартинки);
	Картинка = новый Картинка(Ссылка);
	ОбрабатываемаяКартинка = новый ОбрабатываемаяКартинка(Картинка);
	ОбрабатываемаяКартинка.Повернуть(90);
	АдресКартинки = ПоместитьВоВременноеХранилище(ОбрабатываемаяКартинка.ПолучитьКартинку().ПолучитьДвоичныеДанные(), УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПовернутьКартинкуПротивЧасовой(Команда)
	
	ПовернутьФотоНаСервереПротивЧасовой();
	
КонецПроцедуры

&НаСервере
Процедура ПовернутьФотоНаСервереПротивЧасовой()
	
	Ссылка = ПолучитьИзВременногоХранилища(АдресКартинки);
	Картинка = новый Картинка(Ссылка);
	ОбрабатываемаяКартинка = новый ОбрабатываемаяКартинка(Картинка);
	ОбрабатываемаяКартинка.Повернуть(-90);
	АдресКартинки = ПоместитьВоВременноеХранилище(ОбрабатываемаяКартинка.ПолучитьКартинку().ПолучитьДвоичныеДанные(), УникальныйИдентификатор);
	
КонецПроцедуры
